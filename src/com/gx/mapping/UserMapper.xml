<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.UserPo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="userName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="roleID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  
  <select id="selectLogin" resultType="com.gx.po.UserPo" >
    Select * From users Where userName = #{userName,jdbcType=VARCHAR} And password = #{password,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByname" resultType="com.gx.po.UserPo" parameterType="com.gx.po.UserPo">
    Select * From users Where userName = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByUserName" resultType="java.lang.Integer" parameterType="java.lang.String" >
    Select count(*) From users Where userName = #{userName,jdbcType=VARCHAR}
  </select>
  
  <!--   新增 -->
  <insert id="insertAll" useGeneratedKeys="true" keyProperty="id" parameterType="com.gx.po.UserPo" >
       INSERT INTO users (userName,password,createTime,updateTime,roleID)
     values (#{userName,jdbcType=VARCHAR},
		     #{password,jdbcType=VARCHAR},
		     #{createTime,jdbcType=TIMESTAMP},
		     #{updateTime,jdbcType=TIMESTAMP},
		     #{roleID,jdbcType=VARCHAR}
		     )
  </insert>
  
<!--   查询全部 -->
  <!-- <select id="selectAll" resultType="com.gx.po.RoomSetPo" >
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id order by r.roomNumber ASC  
  </select> -->
  
<!--   修改要用的精确查询 -->
   <select id="selectById" resultType="com.gx.po.UserPo" parameterType="java.lang.Integer">
    select * from users where id=#{id,jdbcType=INTEGER}
   </select>
   
<!--    修改 -->
   <update id="updateById" parameterType="com.gx.po.UserPo">
      UPDATE users SET userName=#{userName,jdbcType=INTEGER},
					      password=#{password,jdbcType=INTEGER},
					      roleID=#{roleID,jdbcType=INTEGER},
					      updateTime=#{updateTime,jdbcType=TIMESTAMP}
                   WHERE id = #{id,jdbcType=INTEGER}
   </update>
   
   <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM users WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  
   <!--   分页模糊查询 -->
   <select id="pageFuzzyselect" resultType="com.gx.po.UserPo">
       SELECT * from users
     WHERE userName like CONCAT('%',#{userName,jdbcType=VARCHAR},'%') 
     limit #{start},#{pageSize}
  </select>
  
  
  <select id="countFuzzyselect" resultType="java.lang.Integer">
       SELECT count(*) FROM users 
     WHERE userName like CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
  </select>
  
  
  
   <select id="selectYZ" resultType="java.lang.String">
    SELECT COUNT(*) FROM users Where roleID=#{roleID}
  </select>
  

<!--   查询所有数据  非本派所用 -->
   <select id="selectAll" resultType="com.gx.po.UserPo">
    SELECT * from users;
   </select>
   
<!--  模糊查询 运用 Ajax 非分页 -->
   <select id="selectAjaxList" resultType="com.gx.po.UserPo">
    SELECT * from users
      WHERE userName like CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
   </select>       
  
</mapper>