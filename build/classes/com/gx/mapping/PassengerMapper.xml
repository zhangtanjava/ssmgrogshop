<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.PassengerDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.PassengerPo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="genderID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="contactPhoneNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="unitsOrAddress" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String" />
        <arg column="creteTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
        <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
        <arg column="storeID" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

<!--   新增 -->
  <insert id="insertAll" useGeneratedKeys="true" keyProperty="id" parameterType="com.gx.po.PassengerPo" >
      insert into passenger (name,genderID,contactPhoneNumber,unitsOrAddress,remarks,createTime,updateTime,storeID)
      values (#{name,jdbcType=VARCHAR},
             #{genderID,jdbcType=VARCHAR},
             #{contactPhoneNumber,jdbcType=VARCHAR},
             #{unitsOrAddress,jdbcType=VARCHAR},
             #{remarks,jdbcType=VARCHAR},
             #{createTime,jdbcType=TIMESTAMP},
             #{updateTime,jdbcType=TIMESTAMP},
             #{storeID,jdbcType=VARCHAR})
  </insert>
  
<!--   查询全部 -->
  <!-- <select id="selectAll" resultType="com.gx.po.RoomSetPo" >
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id order by r.roomNumber ASC  
  </select> -->
  
<!--   修改要用的精确查询 -->
   <select id="selectById" resultType="com.gx.po.PassengerPo" parameterType="java.lang.Integer">
    select * from passenger where id=#{id,jdbcType=INTEGER}
   </select>
   
<!--    修改 -->
   <update id="updateById" parameterType="com.gx.po.PassengerPo">
      UPDATE passenger SET name=#{name,jdbcType=VARCHAR},
			              genderID=#{genderID,jdbcType=VARCHAR},
			              contactPhoneNumber=#{contactPhoneNumber,jdbcType=VARCHAR},
			              unitsOrAddress=#{unitsOrAddress,jdbcType=VARCHAR},
			              remarks=#{remarks,jdbcType=VARCHAR},
			              updateTime=#{updateTime,jdbcType=TIMESTAMP}
                   WHERE id = #{id,jdbcType=INTEGER}
   </update>
   
   <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM passenger WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  
   <!--   分页模糊查询 -->
   <select id="pageFuzzyselect" resultType="com.gx.po.PassengerPo">
       SELECT * from passenger
       <where>
           <if test="storeID != null  and storeID != '' and storeID != 1 ">
               storeID = #{storeID}
           </if>
           <if test="name != null and name != '' ">
               and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
           </if>
       </where>
     limit #{start},#{pageSize}
  </select>
  
  
  <select id="countFuzzyselect" resultType="java.lang.Integer">
       SELECT count(*) FROM passenger
      <where>
          <if test="storeID != null  and storeID != '' and storeID != 1 ">
              storeID = #{storeID}
          </if>
          <if test="name != null and name != '' ">
              and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
          </if>
      </where>
  </select>
  

   <select id="selectYZ" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM passenger Where papersNumber=#{papersNumber}
  </select>


    <select id="selectByUserName" resultType="java.lang.Integer" parameterType="java.lang.String" >
    Select count(*) From passenger Where name = #{name,jdbcType=VARCHAR}
  </select>



<!--   查询所有数据  非本派所用 -->
   <select id="selectAll" resultType="com.gx.po.PassengerPo">
    SELECT p.*,a.attributeDetailsName AS papersName,b.attributeDetailsName AS educationDegreeName,
     c.attributeDetailsName AS genderName,d.attributeDetailsName AS passengerLevelName,
     e.attributeDetailsName AS nationName,f.attributeDetailsName AS thingReasonName
     FROM passenger p INNER JOIN attributedetails a ON p.papersID=a.id 
     INNER JOIN attributedetails b ON p.educationDegreeID=b.id  INNER JOIN attributedetails c ON p.genderID=c.id 
     INNER JOIN attributedetails d ON p.passengerLevelID=d.id INNER JOIN attributedetails e ON p.nationID=e.id
     INNER JOIN attributedetails f ON p.thingReasonID=f.id 
   </select>
   
<!--  模糊查询 运用 Ajax 非分页 -->
   <select id="selectAjaxList" resultType="com.gx.po.PassengerPo">
    SELECT p.*,a.attributeDetailsName AS papersName,b.attributeDetailsName AS educationDegreeName,
     c.attributeDetailsName AS genderName,d.attributeDetailsName AS passengerLevelName,
     e.attributeDetailsName AS nationName,f.attributeDetailsName AS thingReasonName
     FROM passenger p INNER JOIN attributedetails a ON p.papersID=a.id 
     INNER JOIN attributedetails b ON p.educationDegreeID=b.id  INNER JOIN attributedetails c ON p.genderID=c.id 
     INNER JOIN attributedetails d ON p.passengerLevelID=d.id INNER JOIN attributedetails e ON p.nationID=e.id
     INNER JOIN attributedetails f ON p.thingReasonID=f.id 
      WHERE name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
   </select>       
</mapper>